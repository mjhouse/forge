.TH "nlohmann::detail::has_non_default_from_json< BasicJsonType, T, enable_if_t< not is_basic_json< T >::value > >" 3 "Sat Apr 4 2020" "Version 0.1.0" "Forge" \" -*- nroff -*-
.ad l
.nh
.SH NAME
nlohmann::detail::has_non_default_from_json< BasicJsonType, T, enable_if_t< not is_basic_json< T >::value > >
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <json\&.hpp>\fP
.SS "Public Types"

.in +1c
.ti -1c
.RI "using \fBserializer\fP = typename BasicJsonType::template json_serializer< T, \fBvoid\fP >"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static constexpr bool \fBvalue\fP"
.br
.in -1c
.SH "Member Typedef Documentation"
.PP 
.SS "template<typename BasicJsonType , typename T > using \fBnlohmann::detail::has_non_default_from_json\fP< BasicJsonType, T, \fBenable_if_t\fP< not \fBis_basic_json\fP< T >::\fBvalue\fP > >::\fBserializer\fP =  typename BasicJsonType::template json_serializer<T, \fBvoid\fP>"

.SH "Member Data Documentation"
.PP 
.SS "template<typename BasicJsonType , typename T > constexpr bool \fBnlohmann::detail::has_non_default_from_json\fP< BasicJsonType, T, \fBenable_if_t\fP< not \fBis_basic_json\fP< T >::value > >::value\fC [static]\fP, \fC [constexpr]\fP"
\fBInitial value:\fP
.PP
.nf
=
        is_detected_exact<T, from_json_function, serializer,
        const BasicJsonType&>::value
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for Forge from the source code\&.
